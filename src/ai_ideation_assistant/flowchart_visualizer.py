import openai
import os
from dotenv import load_dotenv
import subprocess
import yaml

# load api key
load_dotenv()
openai.api_key = os.getenv("OPENAI_API_KEY")

# Import configuration parameters from config.yml
with open('config.yml' , 'r') as f:
    config =yaml.safe_load(f)['sokrates']['flowchart_visualizer']

def generate_flowchart(input_text):
    
    """
    Generates a LaTeX flowchart code from the input text using the OpenAI GPT-3.5 model.
    """
    
    prompt = f"Represent this text in a latex flowchart with only the keypoints mentioned in the flowchart. \
               Use the tikz and xcolor package. draw a rectangular block around each block  \
               Only show the code.:  \n\n{input_text}"

    request = {"role": "system", "content": prompt}    
    # extract the latex code generated by gpt 3.5 model
    response = openai.ChatCompletion.create(model= config['gpt_model'], max_tokens = config['max_response_token'], messages=[request])

    return response['choices'][0]['message']['content']
        
def latex_to_pdf(latex_file_path):
    """
    Compiles a LaTeX file to a PDF file using pdflatex.
    """
    # Compile the LaTeX file to a PDF file
    pdf_file_path = os.path.splitext(latex_file_path)[0] + '.pdf'
    subprocess.run(['pdflatex', '-interaction=nonstopmode', latex_file_path], check=True)
    
    return pdf_file_path
